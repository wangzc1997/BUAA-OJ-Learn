//
//  main.cpp
//  且听风吟之呆逼二三事
//
//  Created by wangzhongchi on 2020/10/23.
//  Copyright © 2020 PhD Wang's Macbook . All rights reserved.
//

#include <stdio.h>

int fib[46];

int main(int argc, const char * argv[]) {
    fib[0] = 1;
    fib[1] = 1;
    int i;
    for (i = 2; i < 46; i++) {
        fib[i] = fib[i-2] + fib[i-1];
    }
    
    int n;
    while (scanf("%d",&n)!= EOF) {
        int i;
        for (i = 1; i < 46; i++) {
            if (fib[i] == n) {
                break;
            }
        }
        if (i == 46) {
            printf("Oh,yes!\n");
        }else{
            printf("Oh,holly shit!\n");
        }
    }

    return 0;
}

/*
 wzc是Tera里且听风吟公会的会长,本着为会员着想的心理,努力发展公会,公会人数也是日益壮大,慢慢的就加入了各大公会战,野外打狗的行列。
 但是公会的某个妹子突然被呆比抢走并且已经发展到线下了（hhhh
 广大会员和会长怎么能忍,随着呆比的发展，渐渐不见他上线，所以大家偷偷决定将他驱逐公会，但是会长wzc是个民主的会长（权限狗），他决定打开公会仓库，让呆比拿走一些金子作为他两个月来的贡献，但是wzc比较大方（抠门），定了下面的规矩：
 wzc和呆比轮流取金子，wzc先取，第1次可以取任意多的金币，但不能全部取完.以后每次取的金子不能超过上次取的2倍，如果最后是wzc取完那么呆比取到的金子就要还回来,反之呆比可以拿走取到的金子。假设呆比和wzc都竭尽全力想要赢。
 wzc沉迷于公会战和各种事物不能自拔所以需要你来判断呆比能不能全身而退。
 
 
 这题说是就是斐波那契博弈的内容。有一堆个数为n的石子，游戏双方轮流取石子，满足：
 
 1)先手不能在第一次把所有的石子取完；

 2)之后每次可以取的石子数介于1到对手刚取的石子数的2倍之间（包含1和对手刚取的石子数的2倍）。

 约定取走最后一个石子的人为赢家，求必败态。
 
 看来这道题应该就是符合斐波那契博弈的规则，所以wzc和呆逼也都是按照斐波那契数列的形式来确定要取走的金子数，所以刚开始要做一个斐波那契数列，
 
 貌似这个答案，只要n不是2，3，5.....就都是wzc赢。（只要n不是斐波那契数列中的数，就wzc赢）
 因为什么呢？
 因为n = 2时，fib[2] = 2；
 n = 3时， fib[3] = 3;
 n = 4时， fib[4] = 5;直接跳过了4，所以i从1到46全部都循环了，也没有等于4的时候，所以此时
 i==46,wzc赢了。
 n = 5时， fib[4] = 5 循环break，呆逼赢。
 
 就是这个意思，由于题目的规律和斐波那契博弈十分相同，所以考虑用斐波那契博弈的思路来做。
 https://blog.csdn.net/acm_cxlove/article/details/7835016
*/
